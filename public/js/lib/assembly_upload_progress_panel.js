$(function(){!function(){var e=2e3;$("body").on("click",".assemblies-upload-ready-button",function(){console.log("[WGST] Getting ready to upload assemblies and metadata"),window.WGST.geo.map.markers.metadata.setMap(null),window.WGST.exports.removePanel("assembly-upload-navigation"),window.WGST.exports.removePanel("assembly-upload-metadata"),window.WGST.exports.removePanel("assembly-upload-analytics"),WGST.dragAndDrop.files=[];var o=Object.keys(window.WGST.upload.fastaAndMetadata).length;window.WGST.exports.createPanel("assembly-upload-progress",{panelId:"assembly-upload-progress",assemblyFileIds:Object.keys(window.WGST.upload.fastaAndMetadata),totalNumberOfAssembliesUploading:o}),window.WGST.exports.showPanel("assembly-upload-progress");var a="";setTimeout(function(){$.ajax({type:"POST",url:"/collection/add/",datatype:"json",data:{collectionId:a,userAssemblyIds:Object.keys(window.WGST.upload.fastaAndMetadata)}}).done(function(e){var o=e.collectionId,a=e.userAssemblyIdToAssemblyIdMap;console.debug("mapAssemblyIdToUserAssemblyId:"),console.dir(a),WGST.upload.collection[o]={},WGST.upload.collection[o].notifications={assembly:{},all:{},tree:!1};var s=[];$.each(a,function(e){var l=a[e];"undefined"!=typeof window.WGST.upload.fastaAndMetadata[l]&&s.push([o,e,window.WGST.upload.fastaAndMetadata[l]]),console.log("=============================================="),console.dir(s),console.log(e)}),s.forEach(function(e){var o=e[0],a=e[1],s=e[2],t={},n=s.name;console.debug("userAssemblyId: "+n),console.dir(WGST.upload),console.debug("assemblyData: "),console.dir(s),t.collectionId=o,t.assemblyId=a,t.userAssemblyId=s.fasta.name,t.sequences=s.fasta.assembly,t.metadata={datetime:s.metadata.datetime,geography:{position:{latitude:s.metadata.geography.position.latitude,longitude:s.metadata.geography.position.longitude},address:s.metadata.geography.address},source:s.metadata.source},l(t)})}).fail(function(e,o,a){console.log("[WGST][ERROR] Failed to get collection id"),console.error(o),console.error(a),console.error(e),showNotification(o)})},e)});var o=0,a=5,s=2e3,l=function(e){a>o?(console.log("[WGST] Uploading "+e.assemblyId+" assembly"),o+=1,e.socketRoomId=WGST.socket.roomId,console.log("About to upload assembly:"),console.dir(e),$.ajax({type:"POST",url:"/assembly/add/",datatype:"json",data:e}).done(function(){}).fail(function(e,o,a){console.log("[WGST][Error] Failed to send FASTA file object to server or received error message"),console.error(o),console.error(a),console.error(e),showNotification(o)})):setTimeout(l,s,e)};window.WGST.socket.connection.on("assemblyUploadNotification",function(e){var o=e.collectionId,a=e.assemblyId,s=e.userAssemblyId,l=e.result,i=o+"__"+a+"__"+l,r=Object.keys(window.WGST.upload.fastaAndMetadata),c=Object.keys(window.WGST.assembly.analysis).length,p=c*r.length,u=Object.keys(window.WGST.collection.analysis).length,m=p+u;console.log("[WGST][Socket.io] Received assembly upload notification:"),console.log("[WGST][Socket.io] Assembly id: "+a),console.log("[WGST][Socket.io] Result: "+l),-1===Object.keys(window.WGST.upload.collection[o].notifications.all).indexOf(i)&&(window.WGST.upload.collection[o].notifications.all[i]="OK",console.debug("[WGST] » Received "+Object.keys(window.WGST.upload.collection[o].notifications.all).length+" out of "+m+" assembly results"),-1!==Object.keys(window.WGST.assembly.analysis).indexOf(l)&&t(a,s,c,l),n(o,s,a,m,l),m===Object.keys(window.WGST.upload.collection[o].notifications.all).length&&(console.log("[WGST] ✔ Finished uploading and processing new collection "+o),setTimeout(function(){window.WGST.exports.removePanel("assembly-upload-progress"),d(),window.WGST.exports.getCollection(o)},1e3)))});var t=function(e,a,s,l){var t=$('.assembly-list-upload-progress tr[data-assembly-file-id="'+a+'"] '),n=t.find(".progress-bar"),d='<span class="glyphicon glyphicon-ok"></span>',i=parseFloat(t.find(".progress-bar").attr("aria-valuenow")),r=100/s,c=i+r;if(l===window.WGST.assembly.analysis.UPLOAD_OK?t.find(".assembly-upload-uploaded").html(d):l===WGST.assembly.analysis.MLST_RESULT?t.find(".assembly-upload-result-mlst").html(d):l===WGST.assembly.analysis.PAARSNP_RESULT?t.find(".assembly-upload-result-paarsnp").html(d):l===WGST.assembly.analysis.FP_COMP?t.find(".assembly-upload-result-fp-comp").html(d):l===WGST.assembly.analysis.CORE&&t.find(".assembly-upload-result-core").html(d),n.css("width",c+"%").attr("aria-valuenow",c),c>0&&n.text(Math.round(c)+"%"),c>=100){o-=1,t.find(".progress").removeClass("active").removeClass("progress-striped"),n.removeClass("progress-bar-info").addClass("progress-bar-success");var p=t.find(".assembly-upload-name").text();t.find(".assembly-upload-name").html('<a href="#" class="open-assembly-button" data-assembly-id="'+e+'">'+p+"</a>");var u=$(".assemblies-upload-processed");u.text(parseInt(u.text(),10)+1)}},n=function(e,o,a,s){var l=$(".assemblies-upload-progress").find(".progress-bar"),t=parseFloat(l.attr("aria-valuenow")),n=100/s,d=t+n;if(l.css("width",d+"%").attr("aria-valuenow",d),d>0&&l.text(Math.round(d)+"%"),d>=100&&l.addClass("progress-bar-success"),WGST.speak===!0&&d%30===0){var i=new SpeechSynthesisUtterance("Uploaded over "+d+" percent");window.speechSynthesis.speak(i)}},d=function(){window.WGST.upload.fastaAndMetadata={}}}()});